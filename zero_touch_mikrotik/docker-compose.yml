version: '3.8'

services:
  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"

  app:
    build: .
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      # The master password to decrypt the .env.encrypted file
      - SECRET_MASTER_PASSWORD=${SECRET_MASTER_PASSWORD}
    command: >
      sh -c "
        # Wait for Redis to be ready
        until redis-cli -h redis ping; do
          >&2 echo 'Redis is unavailable - sleeping';
          sleep 1;
        done;
        >&2 echo 'Redis is up - executing command';
        # Start the celery worker
        celery -A orchestrator worker --loglevel=info --concurrency=1
      "

  scheduler:
    build: .
    volumes:
      - .:/app
    depends_on:
      - redis
    environment:
      - SECRET_MASTER_PASSWORD=${SECRET_MASTER_PASSWORD}
    command: >
      sh -c "
        until redis-cli -h redis ping; do
          sleep 1;
        done;
        # Start the celery beat scheduler to trigger the main task periodically
        celery -A orchestrator beat --loglevel=info
      "

  dashboard:
    build: .
    volumes:
      - .:/app
    ports:
      - "5001:5001"
    depends_on:
      - redis
      - app
    command: >
      sh -c "
        until redis-cli -h redis ping; do
          sleep 1;
        done;
        # Start the Flask dashboard
        python dashboard/app.py
      "
